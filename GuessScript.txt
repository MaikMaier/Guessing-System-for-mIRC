/* -----------------------------------------------------------------------------------------------------------------------------------------------
   -----------------------------This Script contains the complete Chatbot for VITALIC_DOTA2s Twitch Channel---------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
   ----------------------------------------------------------Version 0.1.4----beta----------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/ 
   
/* -----------------------------------------------------------------------------------------------------------------------------------------------
   mmr reporting system --------------------------------------------------------------------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/ 

on *:TEXT:!mmr:#: { 
  if ((%floodmmr) || ($($+(%,floodmmr.,$nick),2))) { return }
  set -u10 %floodmmr On
  set -u30 %floodmmr. $+ $nick On
  msg $chan  Solo MMR: %solo Party MMR: %party $+
}

on *:TEXT:!mmr *:#: {
  if ($nick isop #) {
    if ($2 == solo) set %solo $3 
    elseif ($2 == party) set %party $3
  }
}

/* -----------------------------------------------------------------------------------------------------------------------------------------------
    Guessing System ------------------------------------------------------------------------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/ 

/*   -----------------------------
     ------ on join / leave ------
     -----------------------------
*/ 

on *:JOIN:#: {
  var %topic $+($chan,.,$nick)
  if ($readini(Points.ini, n, %topic, Points) != $null) {
    return
  }
  else {
    writeini -n Points.ini %topic Points 0
    writeini -n Points.ini %topic RedeemedHerorequests 0
    writeini -n Points.ini %topic RedeemedAnalysisRequests 0
  }
}

on *:PART:#: {
  var %topic $+($comchan($nick,1),.,$nick)
  if ($readini(Points.ini, n, %topic, Points) == 0 ) {
    if ($readini(Points.ini, n, %topic, RedeemedHerorequests) == 0 ) {
      if ($readini(Points.ini, n, %topic, RedeemedAnalysisRequests) == 0 ) {
        remini -n Points.ini %topic
      }
    }
  }
}

/*   --------------------------------
     ---------- points part ---------
     --------------------------------
*/ 
 
on $*:text:!points *:#: {
  if ($0 == 0) {
    if (($($+(%,floodpoints.,$nick),2))) { return }
    set -u30 %floodpoints. $+ $nick On
    msg # $2 has $readini(Points.ini,$+(#,.,$2),Points) total points.
    return
  }
  if ($0 == 3) { 
    if ($nick isop #) {
      writeini -n Points.ini $+(#,.,$3) Points $calc($readini(Points.ini,$+(#,.,$3),Points) $iif($2 == add,+,-) $iif($4 isnum,$4,1))
      msg $chan $3 now has $readini(Points.ini, n, $+(#,.,$3),Points) total points. 
    } 
    else { msg $chan Only moderators can check others points. | return }
  }
  else {
    if ($0 == 1) {
      if ((%floodpointsof. $+ $2) || ($($+(%,floodpointsof.,$2),2))) { return }
        if ($nick isop #) {
          set -u30 %floodpointsof. $+ $nick On
          msg # $nick has $readini(Points.ini,$+(#,.,$2),Points) total points.
        }
        else { msg $chan Only moderators can check others points. }
    }
  }
}


alias -l add.pts {
  writeini -n Points.ini $1 Points $calc($readini(Points.ini, n, $1,Points) + 1)
}

alias -l addPoints {
  if ($1 !isnum) { echo 2 -st $1 is not a number. It needs to be a number. | halt }
  var %topic $+($chan,.,$nick)
  var %points $calc($readini(Points.ini,%topic,Points) + $1)
  writeini -n Points.ini %topic Points %points
  return %points
}
 
alias -l lookUpPoints {
  var %topic $+($chan,.,$nick)
  var %points $readini(Points.ini,%topic,Points)
  return %points
}

alias doaddpoints {
  if ($3 !isnum) { echo 2 -st $3 is not a number. It needs to be a number. | halt }
  var %topic $+($1,.,$2)
  var %points $calc($readini(Points.ini,%topic,Points) + $3)
  writeini -n Points.ini %topic Points %points
  echo -a Added points for %topic
}
 
alias dorempoints {
  var %topic $+($1,.,$2)
  remini -n Points.ini %topic Points
  echo -a Removed points for %topic
}
 
/*   --------------------------------
     ------ main guessing part ------
     --------------------------------
*/ 

on *:TEXT:!start:#: {
  if ($nick isop #) {
    if (%gameinprogess == 1) { msg # A game is already in progress. Please end it before starting a new one. | return }
    set %whatToGuess $randomNumberBetween1and4
    msg $chan $gameIsStartingMsg
    msg $chan You can use the command !guess <number> to make a guess.
    startbetting
    .timer1 1 180 msg $chan 2 Minutes left to place your guess.
    .timer2 1 240 msg $chan 1 Minute left to place your guess.
    .timer3 1 300 endbetting   
    .timer4 1 302 msg $chan Guessing is now locked.
  }
  else { msg $chan Only moderators can start a new round. }
}

on *:TEXT:!guess &:#: {
  if ($2- !isnum) { msg # Wrong use, you need to place a guess with: !guess <number> | return }
  if (%lock == 0) {
    if ($readini(Guesses.ini, n, Voters, $nick) != 1) {
      msg $chan Thanks for your guess $nick
      writeini -n Guesses.ini Guesses $nick $2
      writeini -n GuessNumbersToUsers.ini Correlation $calc(%guesscount + 1) $nick
      writeini -n Guesses.ini Voters $nick 1
      /inc %guesscount
    }
    else {
      msg $chan I already got a guess from you $nick
    }
  }
  else { msg $chan  Placing guesses is currently disabled. }
}

on *:TEXT:!result &:#: {
  if (%lock == 0) { msg # Guessing is still enabled. Options are !restart or !abort | return }
  if (%gameinprogress == 0) { msg # There is currently no active game. | return }
  var %guessnumberToCompute = 1 
  var %winnercount = 0
  while (%guessnumberToCompute <= %guesscount) {
    var %currentUser = $readini(GuessNumbersToUsers.ini, n, Correlation, %guessnumberToCompute) 
    if ($checkPlayerGuess(%currentUser, $2) == 1) {
      msg $chan %currentuser guessed correctly, congratulations.
      var %topic $+($chan,.,%currentUser)
      if ($readini(Points.ini, n, %topic, Points) == $null) {
        writeini -n Points.ini %topic Points 100
        writeini -n Points.ini %topic RedeemedHerorequests 0
        writeini -n Points.ini %topic RedeemedAnalysisRequests 0
      }
      else {
        writeini -n Points.ini $+(#,.,%currentUser) Points $calc($readini(Points.ini,n, $+(#,.,%currentUser),Points) + 100)
      }
      /inc %winnercount
    }
    /inc %guessnumberToCompute
  }
  if (%winnercount == 0) { msg $chan Noone guessed correctly. Good luck next time. }
  if (%winnercount == 1) { msg $chan That's it, we had only 1 winner this time. }
  if (%winnercount > 1) { msg $chan That's it, we had %winnercount winners this time. }
  /remini Guesses.ini Guesses
  /remini GuessNumbersToUsers.ini Correlation
  /remini Guesses.ini Voters
  set %gameinprogess 0
  set %lock 1
}

on *:TEXT:!abort:#: {
  if ($nick isop #) {
    set %lock 1
    set %guesscount 0
    set %gameinprogess 0
    /remini Guesses.ini Guesses
    /remini GuessNumbersToUsers.ini Correlation
    /remini Guesses.ini Voters
    timers off
    msg $chan Guessing got aborted. Every guess was deleted.
  }
  else { msg $chan Only moderators can abort guessing. }
  
}

on *:TEXT:!restart:#: {
  if ($nick isop #) {
    if (%gameinprogess == 0) { msg $chan There's nothing to restart. | return }
      /remini Guesses.ini Guesses
      /remini GuessNumbersToUsers.ini Correlation
      /remini Guesses.ini Voters
      timers off

      msg $chan Lets start this all over again. All guesses got deleted and the timers reset.
      startbetting
      msg $chan You can  now use the command !guess <number> again, to make a guess.
      .timer1 1 180 msg $chan 2 Minutes left to place your guess.
      .timer2 1 240 msg $chan 1 Minute left to place your guess.
      .timer3 1 300 endbetting   
      .timer4 1 302 msg $chan Guessing is now locked.
  } 
  else { msg $chan Only moderators can restart guessing. }
}

alias -l startbetting {
  set %lock 0
  set %guesscount 0
  set %gameinprogess 1
}

alias -l endbetting {
   set %lock 1
}

alias -l randomNumberBetween1and4 {
   return $rand(1,4)
}

alias -l checkPlayerGuess {
  if ((%whatToGuess != 3) && (%whatToGuess != 4)) {
    if ( $readini(Guesses.ini, n, Guesses, $1) == $2 ) {
      return 1
    }
    else {
      return 0
    }
  }
  else {
    var %tempStorage $readini(Guesses.ini, n, Guesses, $1)
    if ( (%tempStorage <= $calc($2 + 25)) && (%tempStorage >= $calc($2 - 25)) ) {
      return 1
    }
    else {
      return 0
    }
  }
}

alias -l gameIsStartingMsg {
   if (%whatToGuess == 1) {
     return A new round of guessing has started. Viewers can now guess how often VITALIC will die in this game.
   }
   if (%whatToGuess == 2) {
     return A new round of guessing has started. Viewers can now guess how many kills VITALIC will get in this game.
   }
   if (%whatToGuess == 3) {
     return A new round of guessing has started. Viewers can now guess how much GPM VITALIC will achieve in this game. Every guess is allowed to be up to 25 points off of the result to be accepted as correct.
   }
   if (%whatToGuess == 4) {
     return A new round of guessing has started. Viewers can now guess how much XPM VITALIC will achieve in this game. Every guess is allowed to be up to 25 points off of the result to be accepted as correct.
   }
}

/* -----------------------------------------------------------------------------------------------------------------------------------------------
    !herorequest section ---------------------------------------------------------------------------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/ 

on *:TEXT:!herorequest &:#: { 
  if (%floodherorequest) { return }
  set -u180 %herorequest On
  var %topic $+($chan,.,$nick)
  var %points $readini(Points.ini,%topic,Points)
  if (%points < 500) {
    msg $chan Sorry $nick , you dont have enough points to request a hero. Herorequests cost 500 points. | return
  }
  if (%herorequestInProgress == 1) {
    msg $chan Sorry $nick, %herorequestBy already opened a herorequest. Please wait until that one's finished. | return
  }
  set %requestedHero $2
  set %herorequestBy $nick
  set %herorequestInProgress 1
  writeini -n Points.ini $+(#,.,$nick) Points $calc($readini(Points.ini,n, $+(#,.,$nick),Points) - 500)
  writeini -n Points.ini $+(#,.,$nick) RedeemedHerorequests $calc($readini(Points.ini,n, $+(#,.,$nick),RedeemedHerorequests) + 1)
  herorequestreminder $chan
}

alias -l herorequestreminder {
  if ( %herorequestInProgress == 1 ) {
     msg $1 There's an open Herorequest by %herorequestBy , @VITALIC_DOTA2 will play %requestedHero in the next game.
    .timerHerorequest 1 600 herorequestreminder $1
  }
}

on *:TEXT:!hrdone:#: {
  if ($nick isop #) {
    set %requestedHero Keiner
    set %herorequestBy noone
    set %herorequestInProgress 0
  }
}


/* -----------------------------------------------------------------------------------------------------------------------------------------------
    !replayanalysis section ----------------------------------------------------------------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/

on *:TEXT:!replayanalyse:#: { 
  if (%floodreplay) { return }
  set -u30 %floodreplay On
  var %topic $+($chan,.,$nick)
  var %points $readini(Points.ini,%topic,Points)
  if (%points < 1000) {
    msg $chan Sorry $nick , you dont have enough points to request a replay analysis. This request costs 1000 points.
  }
  else {
    if ($readini(AnalysisRequests.ini, n, ActiveRequests, $nick) == 1) {
     msg $chan Hey $nick, you already opened a request. @VITALIC_DOTA2 will contact you soon. | return
    }
    var %analysisrequestBy $nick
    writeini -n Points.ini $+(#,.,$nick) Points $calc($readini(Points.ini,n, $+(#,.,$nick),Points) - 1000)
    writeini -n Points.ini $+(#,.,$nick) RedeemedAnalysisRequests $calc($readini(Points.ini,n, $+(#,.,$nick),RedeemedAnalysisRequests) + 1)
    writeini -n AnalysisRequests.ini ActiveRequests $nick 1
    msg $chan $nick  has used 1000 points to get a first person replay analysis from @VITALIC_DOTA2
    msg $chan @ $nick VITALIC will contact you soon
  }
}

/* -----------------------------------------------------------------------------------------------------------------------------------------------
    Help Section ---------------------------------------------------------------------------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/ 


on *:TEXT:!commands:#: { 
  if (%floodhelp.commands) { return }
  set -u180 %floodhelp.commands On
  msg $chan Hey $nick , please check the channels description for a overview over the betting system.
}
  

