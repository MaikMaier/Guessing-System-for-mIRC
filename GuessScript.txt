/* -----------------------------------------------------------------------------------------------------------------------------------------------
   mmr reporting system --------------------------------------------------------------------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/ 


on *:TEXT:!mmr:#: { 
  if ((%floodmmr) || ($($+(%,floodmmr.,$nick),2))) { return }
  set -u10 %floodmmr On
  set -u30 %floodmmr. $+ $nick On
  msg $chan  Solo MMR: %solo Party MMR: %party $+
}

on *:text:!mmr *:#: {
  if ($nick isop #) {
    if ($2 == solo) set %solo $3 
    elseif ($2 == party) set %party $3
  }
}

/* -----------------------------------------------------------------------------------------------------------------------------------------------
    Guessing System ------------------------------------------------------------------------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/ 


alias -l addPoints {
  if ($1 !isnum) { echo 2 -st $1 is not a number. It needs to be a number. | halt }
  var %topic $+($chan,.,$nick)
  var %points $calc($readini(Points.ini,%topic,Points) + $1)
  writeini -n Points.ini %topic Points %points
  return %points
}
 
alias -l lookUpPoints {
  var %topic $+($chan,.,$nick)
  var %points $readini(Points.ini,%topic,Points)
  return %points
}

alias doaddpoints {
  if ($3 !isnum) { echo 2 -st $3 is not a number. It needs to be a number. | halt }
  var %topic $+($1,.,$2)
  var %points $calc($readini(Points.ini,%topic,Points) + $3)
  writeini -n Points.ini %topic Points %points
  echo -a Added points for %topic
}
 
alias dorempoints {
  var %topic $+($1,.,$2)
  remini -n Points.ini %topic Points
  echo -a Removed points for %topic
}
 
on *:text:!points:#:{
  if ((%floodpoints) || ($($+(%,floodpoints.,$nick),2))) { return }
  set -u10 %floodpoints On
  set -u30 %floodpoints. $+ $nick On
  msg # $nick has $readini(Points.ini,$+(#,.,$nick),Points) total points.
}
 
on $*:text:/!points (add|remove)/Si:#: {
  if ($nick isop #) {
    if ($0 < 3) { 
      msg # Insufficient parameters: Use !points <add|remove> <user> [number] | return 
    }
    writeini -n Points.ini $+(#,.,$3) Points $calc($readini(Points.ini,$+(#,.,$3),Points) $iif($2 == add,+,-) $iif($4 isnum,$4,1))
    msg $chan $3 now has $readini(Points.ini, n, $+(#,.,$3),Points) total points. 
  }
  else { msg $chan This command is only available to moderators. }
}

on *:JOIN:#: {
  var %topic $+($chan,.,$nick)
  if ($readini(Points.ini, n, %topic, Points) != $null) {
    return
  }
  else {
    writeini -n Points.ini %topic Points 0
  }
}

on *:TEXT:!start:#: {
  if ($nick isop #) {
    if (%gameinprogess == 1) { msg # A game is already in progress. Please end it before starting a new one. | return }
    msg $chan A new round of guessing has started. Viewers can now guess how often VITALIC will die in this game.
    startbetting
    msg $chan You can use the command !guess <deathcount> to make a guess.
    .timer1 1 180 msg $chan 2 Minutes left to place your guess.
    .timer2 1 240 msg $chan 1 Minute left to place your guess.
    .timer3 1 300 endbetting   
    .timer4 1 302 msg $chan Guessing is now locked.
  }
  else { msg $chan Only moderators can start a new round. }
}

on *:TEXT:!guess &:#: {
  if ($2- !isnum) { msg # Wrong use, you need to place a guess with: !guess <putyourguessnumberhere> | return }
  if (%lock == 0) {
    if ($readini(Guesses.ini, n, Voters, $nick) != 1) {
      msg $chan Thanks for your guess $nick
      writeini -n Guesses.ini Guesses $nick $2
      writeini -n GuessNumbersToUsers.ini Correlation $calc(%guesscount + 1) $nick
      writeini -n Guesses.ini Voters $nick 1
      /inc %guesscount
    }
    else {
      msg $chan I already got a guess from you $nick
    }
  }
  else { msg $chan  Placing guesses is currently disabled. }
}

on *:TEXT:!result &:#: {
  var %guessnumberToCompute = 1 
  var %winnercount = 0
  while (%guessnumberToCompute <= %guesscount) {
    var %currentUser = $readini(GuessNumbersToUsers.ini, n, Correlation, %guessnumberToCompute) 
    if ($readini(Guesses.ini, n, Guesses, %currentUser) == $2) {
      msg $chan %currentuser guessed correctly, congratulations.
      writeini -n Points.ini $+(#,.,%currentUser) Points $calc($readini(Points.ini,n, $+(#,.,%currentUser),Points) + 100)
      /inc %winnercount
    }
    /inc %guessnumberToCompute
  }
  if (%winnercount == null) { msg $chan Noone guessed correctly. Good luck next time. }
  else {
    msg $chan That's it, no more winners.
  }
  /remini Guesses.ini Guesses
  /remini GuessNumbersToUsers.ini Correlation
  /remini Guesses.ini Voters
  set %gameinprogess 0
	
}

alias -l startbetting {
  set %lock 0
  set %guesscount 0
  set %gameinprogess 1
}

alias -l endbetting {
   set %lock 1
}

alias -l add.pts {
  writeini -n Points.ini $1 Points $calc($readini(Points.ini, n, $1,Points) + 1)
}

/* -----------------------------------------------------------------------------------------------------------------------------------------------
    Help Section ---------------------------------------------------------------------------------------------------------------------------------
   -----------------------------------------------------------------------------------------------------------------------------------------------
*/ 

on *:TEXT:!help:#: { 
  if (%floodhelp.basic) { return }
  set -u180 %floodhelp.basic On
  msg $chan  Please specify which help section you want by using !help guessing or !help mmr
}

on *:text:!help &:#: {
  if ((%floodhelp. $+ $2)) { return }
  set -u180 %floodhelp. $+ $2 On
  if ($2 == mmr) {
    if ($nick isop #) {
      msg $chan $nick , you can set the Solo or Party MMR by useing "!mmr solo xxx" or "!mmr party xxx".
      msg $chan Viewers cannot set mmr, they can view it by useing "!mmr" without parameters.
    }
    else {
      msg $chan $nick , you can view VITALICs current mmr by using "!mmr".
    }
  }
  if ($2 == guessing) {
    if ($nick isop #) {
      msg $chan $nick , you can start a new guessing round by using "!start". In the following 5 minutes, viewers will be allowed to guess VITALICs deathcount by using "!guess <number>".
      msg $chan After the 5 min guess phase is over, you can provide the correct answer using "!result <deathcount>".
    }
    else {
      msg $chan $nick , while guessing is allowed, you can place your guess using "!guess <deathcount>". If you guess correctly, you'll be awarded with 100 points.
    }
  }
  
}
